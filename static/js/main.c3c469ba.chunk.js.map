{"version":3,"sources":["components/Navbar.js","pages/Home.js","pages/CreateSplit.js","pages/SplitDetails.js","pages/PaymentPage.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","navigate","useNavigate","React","createElement","className","onClick","Home","transactions","setTransactions","useState","useEffect","storedTransactions","JSON","parse","localStorage","getItem","reverse","length","map","transaction","key","id","title","amount","timestamp","state","CreateSplit","setTitle","setAmount","hostUpiId","setHostUpiId","participants","setParticipants","onSubmit","e","preventDefault","alert","participantList","split","p","trim","filter","newTransaction","Date","now","toLocaleString","push","setItem","stringify","type","placeholder","value","onChange","target","required","SplitDetails","useLocation","paidStatus","setPaidStatus","splitAmount","toFixed","updatedStatus","forEach","transactionId","baseURL","window","location","origin","index","paymentPageURL","encodeURIComponent","console","log","async","navigator","clipboard","writeText","paymentLink","err","error","copyToClipboard","PaymentPage","queryParams","URLSearchParams","search","participantName","get","upiLink","paymentSuccess","setPaymentSuccess","showModal","setShowModal","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","toDateString","href","handleConfirmPayment","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c3c469ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1 className=\"logo\" onClick={() => navigate(\"/\")}>SplitZy</h1>  {/* ✅ Clickable Logo */}\r\n      <div className=\"nav-links\">\r\n        <button onClick={() => navigate(\"/\")}>Home</button>\r\n        <button onClick={() => navigate(\"/create-split\")}>Create Split</button>\r\n        <button onClick={() => navigate(\"/split-details\")}>Transactions</button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";  // ✅ Import Navbar\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedTransactions = JSON.parse(localStorage.getItem(\"transactions\")) || [];\r\n    setTransactions(storedTransactions.reverse());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />  {/* ✅ Include Navbar */}\r\n\r\n      <div className=\"header\">\r\n        {/* <h2>Split Bill</h2> */}\r\n        <p className=\"sub-text\">Manage your expenses with friends.</p>\r\n      </div>\r\n\r\n      <div className=\"card home-card\">\r\n        <h3>Create a New Split</h3>\r\n        <p>Split your bill easily and share with your friends.</p>\r\n        <button className=\"button\" onClick={() => navigate(\"/create-split\")}>Create Split</button>\r\n      </div>\r\n\r\n      <h3 className=\"sub-heading\">Recent Transactions</h3>\r\n      {transactions.length === 0 ? (\r\n        <p className=\"no-transactions\">No transactions yet. Create a split!</p>\r\n      ) : (\r\n        transactions.map((transaction) => (\r\n          <div key={transaction.id} className=\"card transaction-card\">\r\n            <div className=\"transaction-details\">\r\n              <p className=\"transaction-name\">{transaction.title}</p>\r\n              <p className=\"transaction-amount\">₹{transaction.amount}</p>\r\n              <p className=\"transaction-time\">{transaction.timestamp}</p>\r\n            </div>\r\n            <button className=\"button small\" onClick={() => navigate(\"/split-details\", { state: transaction })}>\r\n              View\r\n            </button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";  // ✅ Include Navbar\r\n\r\nconst CreateSplit = () => {\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [hostUpiId, setHostUpiId] = useState(\"\");\r\n  const [participants, setParticipants] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title || !amount || !hostUpiId || !participants) {\r\n      alert(\"❌ Please fill in all fields before proceeding.\");\r\n      return;\r\n    }\r\n\r\n    const participantList = participants.split(\",\").map((p) => p.trim()).filter((p) => p !== \"\");\r\n\r\n    if (participantList.length === 0) {\r\n      alert(\"❌ Please enter at least one participant.\");\r\n      return;\r\n    }\r\n\r\n    const newTransaction = {\r\n      id: Date.now(),\r\n      title,\r\n      amount,\r\n      hostUpiId,\r\n      participants: participantList,\r\n      timestamp: new Date().toLocaleString(),\r\n    };\r\n\r\n    const storedTransactions = JSON.parse(localStorage.getItem(\"transactions\")) || [];\r\n    storedTransactions.push(newTransaction);\r\n    localStorage.setItem(\"transactions\", JSON.stringify(storedTransactions));\r\n\r\n    navigate(\"/split-details\", { state: newTransaction });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />  {/* ✅ Include Navbar */}\r\n\r\n      <div className=\"form-container\">\r\n        <h2>Create Split</h2>\r\n        <p className=\"sub-text\">Enter details for bill splitting.</p>\r\n\r\n        <form className=\"card split-form\" onSubmit={handleSubmit}>\r\n          <label>Title</label>\r\n          <input type=\"text\" className=\"input-field\" placeholder=\"e.g. Dinner at XYZ\"\r\n            value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n\r\n          <label>Total Amount</label>\r\n          <input type=\"number\" className=\"input-field\" placeholder=\"₹\"\r\n            value={amount} onChange={(e) => setAmount(e.target.value)} required />\r\n\r\n          <label>Host UPI ID</label>\r\n          <input type=\"text\" className=\"input-field\" placeholder=\"yourupi@upi\"\r\n            value={hostUpiId} onChange={(e) => setHostUpiId(e.target.value)} required />\r\n\r\n          <label>Participants (comma-separated)</label>\r\n          <input type=\"text\" className=\"input-field\" placeholder=\"Alice, Bob, Charlie\"\r\n            value={participants} onChange={(e) => setParticipants(e.target.value)} required />\r\n\r\n          <button type=\"submit\" className=\"button\">Proceed</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSplit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst SplitDetails = () => {\r\n  const location = useLocation();\r\n  const transaction = location.state;\r\n\r\n  const [paidStatus, setPaidStatus] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (transaction) {\r\n      const { hostUpiId, participants, amount } = transaction;\r\n      const splitAmount = (amount / participants.length).toFixed(2);\r\n      const updatedStatus = {};\r\n\r\n      participants.forEach((p) => {\r\n        const transactionId = `${p}-${splitAmount}-${hostUpiId}`;\r\n        updatedStatus[p] = localStorage.getItem(transactionId) === \"paid\";\r\n      });\r\n\r\n      setPaidStatus(updatedStatus);\r\n    }\r\n  }, [transaction]);\r\n\r\n  if (!transaction) {\r\n    return <p className=\"error\">❌ No transaction found.</p>;\r\n  }\r\n\r\n  const { title, amount, hostUpiId, participants } = transaction;\r\n  const splitAmount = (amount / participants.length).toFixed(2);\r\n\r\n  // ✅ Dynamically get the full base URL\r\n  const repoName = \"splitzy\"; // Change to your actual repo name\r\n  const baseURL = `${window.location.origin}/${repoName}/#/pay`;\r\n\r\n  const copyToClipboard = async (paymentLink) => {\r\n    try {\r\n      await navigator.clipboard.writeText(paymentLink);\r\n      alert(\"✅ Payment link copied! Share it with the participant.\");\r\n    } catch (err) {\r\n      console.error(\"❌ Copy failed:\", err);\r\n      alert(\"❌ Failed to copy link. Try manually selecting and copying.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n\r\n      <div className=\"header\">\r\n        <h2>{title}</h2>\r\n        <p className=\"sub-text\">Total Amount: ₹{amount}</p>\r\n      </div>\r\n\r\n      <div className=\"card upi-card\">\r\n        <p className=\"label\">Host UPI ID</p>\r\n        <p className=\"upi\">{hostUpiId}</p>\r\n      </div>\r\n\r\n      <h3 className=\"sub-heading\">Participants</h3>\r\n      <ul className=\"participants-list\">\r\n        {participants.map((p, index) => {\r\n          // ✅ Ensure the full URL is correctly included\r\n          const paymentPageURL = `${baseURL}?name=${encodeURIComponent(p)}&amount=${splitAmount}&upi=${encodeURIComponent(hostUpiId)}`;\r\n          console.log(`Generated Payment Link for ${p}:`, paymentPageURL); // Debugging\r\n\r\n          return (\r\n            <li key={index} className=\"card participant\">\r\n              <div>\r\n                <p className=\"participant-name\">{p}</p>\r\n                <p className=\"split-amount\">₹{splitAmount}</p>\r\n              </div>\r\n              {paidStatus[p] ? (\r\n                <p className=\"success-message\">✅ Paid</p>\r\n              ) : (\r\n                <button className=\"button small\" onClick={() => copyToClipboard(paymentPageURL)}>\r\n                  Copy Link\r\n                </button>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PaymentPage = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const participantName = queryParams.get(\"name\") || \"Guest\";\r\n  const amount = queryParams.get(\"amount\") || \"0\";\r\n  const hostUpiId = queryParams.get(\"upi\") || \"\";\r\n  const transactionId = `${participantName}-${amount}-${hostUpiId}`;\r\n  const upiLink = `upi://pay?pa=${hostUpiId}&pn=${encodeURIComponent(\r\n    participantName\r\n  )}&am=${amount}&cu=INR`;\r\n\r\n  const [paymentSuccess, setPaymentSuccess] = useState(\r\n    localStorage.getItem(transactionId) === \"paid\"\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === \"visible\" && !paymentSuccess) {\r\n        setShowModal(true);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n    return () =>\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, [paymentSuccess]);\r\n\r\n  const handleConfirmPayment = () => {\r\n    localStorage.setItem(transactionId, \"paid\");\r\n    setPaymentSuccess(true);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col justify-between\">\r\n      {/* Header */}\r\n      <div className=\"bg-black text-white p-5 rounded-b-3xl shadow-md\">\r\n        <h2 className=\"text-2xl font-semibold\">Deposit</h2>\r\n      </div>\r\n\r\n      {/* Payment Card */}\r\n      <div className=\"flex flex-col items-center justify-center p-6\">\r\n        <div className=\"bg-white rounded-3xl shadow-lg p-6 w-11/12 text-center\">\r\n          <h3 className=\"text-gray-700 text-xl font-semibold\">Bank SCA</h3>\r\n          <p className=\"text-gray-500 mt-1\">Deposit on {new Date().toDateString()}</p>\r\n          <h1 className=\"text-5xl font-bold text-black my-5\">₹{amount}</h1>\r\n\r\n          {paymentSuccess ? (\r\n            <p className=\"text-green-600 text-lg font-bold\">✅ Payment Successful!</p>\r\n          ) : (\r\n            <button\r\n              onClick={() => (window.location.href = upiLink)}\r\n              className=\"w-full bg-black text-white py-3 rounded-full mt-4 text-lg font-medium\"\r\n            >\r\n              Pay Now\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirmation Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\r\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-80 text-center\">\r\n            <h3 className=\"text-xl font-semibold\">Confirm Payment</h3>\r\n            <p className=\"text-gray-600 my-3\">Did you complete the payment?</p>\r\n            <button\r\n              onClick={handleConfirmPayment}\r\n              className=\"w-full bg-green-500 text-white py-2 rounded-md text-lg font-medium mb-2\"\r\n            >\r\n              Yes, I Paid\r\n            </button>\r\n            <button\r\n              onClick={() => setShowModal(false)}\r\n              className=\"w-full bg-gray-300 py-2 rounded-md text-lg font-medium\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Bottom Navigation */}\r\n      <div className=\"bg-white shadow-lg py-3 flex justify-around items-center fixed bottom-0 w-full rounded-t-3xl\">\r\n        <button className=\"text-gray-500 text-2xl\">🏠</button>\r\n        <button className=\"bg-black text-white text-2xl rounded-full p-3\">💲</button>\r\n        <button className=\"text-gray-500 text-2xl\">📜</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n","import React from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport CreateSplit from \"./pages/CreateSplit\";\nimport SplitDetails from \"./pages/SplitDetails\";\nimport PaymentPage from \"./pages/PaymentPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/create-split\" element={<CreateSplit />} />\n        <Route path=\"/split-details\" element={<SplitDetails />} />\n        <Route path=\"/pay\" element={<PaymentPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}